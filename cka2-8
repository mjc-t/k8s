Q8. Gateway & HTTPRoute 2025
Migrate an existing web application from Ingress to Gateway API.
We must maintain HTTPS access.

A GatewayClass named nginx is installed in the cluster.

First, create a Gateway named web-gateway with hostname gateway.web.k8s.local
that maintains the existing TLS and listener configuration
from the existing ingress resource named web.

Next, create an HTTPRoute named web-route with hostname gateway.web.k8s.local
that maintains the existing routing rules
from the current Ingress resource named web.

You can test your Gateway API configuration with the following command:
curl <https://gateway.web.k8s.local>

(Finally, delete the existing Ingress resource named web.)
​
환경 구성
vi ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
spec:
  tls:
  - hosts:
    - gateway.web.k8s.local
    secretName: web-tls
  rules:
  - host: gateway.web.k8s.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web-service
            port:
              number: 80
​
kubectl apply -f ingress.yaml
kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.1.0/standard-install.yaml
vi gateway-class.yaml
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: nginx
spec:
  controllerName: "nginx.org/gateway-controller"
​
kubectl apply -f gateway-class.yaml
openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/tls.key -out /tmp/tlscrt -subj "/CN=gateway.web.k8s.local”
注意: 마지막 겹따옴표 조심(메모장에서 작성해 붙여넣기) - 인터넷메모장 활용
kubectl create deployment web-app --image=nginx --replicas=1
kubectl expose deployment web-app --name=web-service --port=80
